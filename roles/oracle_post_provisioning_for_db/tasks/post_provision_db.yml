---

- name: create tmp dir
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}"
    state: directory
    recurse: yes

- name: get asm_sid
  shell: ps -ef | grep smon | grep ASM | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set asm_sid
  set_fact:
    asm_sid: "{{ ps_grep_smon.stdout | regex_replace('asm_smon_(.*)', '\\1') }}"

- import_role:
    name: oracle_api_services
    tasks_from: db_checklist_update.yml
  vars:
    chklst_json_body:
      new_entry: True
      checklist_type: "10"
      category_type: Install
      db_install_status: IN PROGRESS
  tags:
  - apex_api

- name: get oracle grid home
  shell: "ps -ef | grep ohasd | grep /u01/app/12.1.0.2/ |  grep -v grep | awk -F ' ' '{ print $8 }'"
  register: oracle_ohasd_process

- name: set grid home
  set_fact:
    oracle_grid_home: "{{ oracle_ohasd_process.stdout | regex_replace('/bin/ohasd.bin', '') }}"

- name: get oracle_sid
  shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set oracle_sid
  set_fact:
    oracle_sid: "{{ ps_grep_smon.stdout | regex_replace('ora_smon_(.*)', '\\1') }}"

- name: get db details
  shell: grep "^{{ oracle_db_name }}:" /etc/oratab | awk 'NR == 1'
  ignore_errors: yes
  changed_when: false
  register: db_details

- name: set oracle_home
  set_fact:
    oracle_home: "{{ db_details.stdout | regex_replace('^[^:]*:([^:]*).*', '\\1') }}"

- name: to get the database name in each node of rac
  block:
    - name: get the database name in rac
      become_user: '{{ oracle_user }}'
      environment: "{{ ora_user_env }}"
      shell: srvctl config database -d {{ oracle_db_name }} | grep -e "instance" | awk -F ':' '{ print $2 }'
      register: rac_database_name

    - name: set rac_oracle_db_name
      set_fact:
        rac_oracle_db_name: "{{ rac_database_name.stdout | trim }}"
  when: '(ansible_play_hosts | length) > 1'

- fail:
    msg: Database named {{ oracle_db_name }} doesn't exists since oracle_home and oracle_sid is not set properly'
  when:
    - oracle_home == ""
    - oracle_sid == ""

- name: complete block of post Provisioning validation
  block:
    - name: Insert a line at the end of a file.
      lineinfile:
        path: "{{ oracle_base }}/admin/ctl/cleanup_files.ctl"
        line: "{{ cleanup_file_line }}"
        loop:
        - /u01/app/oracle/diag/rdbms/{{ oracle_db_name }}/{{ oracle_sid }}/trace:alert_{{ oracle_sid }}.log:archive:clear:7:100
        - /u01/app/oracle/admin/{{ oracle_db_name }}/adump:*aud:delete:none:1:0
        loop_control:
          loop_var: cleanup_file_line
      

    - name: Execute Post Provisioning
      include_tasks: "{{ filename }}"
      loop:
      - post_provisioning_sql.yml
      - adrci_setup.yml
      loop_control:
        loop_var: filename
      when:
        - master_node == inventory_hostname

    - name: Creating sid entry in ORATAB file
      lineinfile:
        path: /etc/oratab
        line: '{{ oracle_sid }}:{{ oracle_home }}:N    # line added by Ansible'
  

    - name: place a marker for completion
      file:
        path: "{{ oracle_base }}/admin/.post_provisioning_done_{{ oracle_db_name }}"
        state: touch
        mode: 0400
  

    - import_role:
        name: oracle_api_services
        tasks_from: db_checklist_update.yml
      vars:
        chklst_json_body:
          new_entry: False
          db_install_status: SUCCESSFUL
      tags:
      - apex_api
  rescue:
    - import_role:
        name: oracle_api_services
        tasks_from: db_checklist_update.yml
      vars:
        chklst_json_body:
          new_entry: False
          db_install_status: Failed
      tags:
      - apex_api
