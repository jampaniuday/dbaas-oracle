---

- name: create oracle_install rsp file (common)
  copy:
    dest: "{{ oracle_tmp }}/db_install.rsp"
    content: |
      oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0
      oracle.install.option={{ install_mode }}
      ORACLE_HOSTNAME={{ ansible_hostname }}.{{ domain }}
      UNIX_GROUP_NAME={{ oracle_group }}
      INVENTORY_LOCATION={{ oracle_base }}/oraInventory
      SELECTED_LANGUAGES=en,en_GB
      ORACLE_HOME={{ oracle_home }}
      ORACLE_BASE={{ oracle_base }}/oracle
      oracle.install.db.InstallEdition={{ oracle_edition }}
      oracle.install.db.DBA_GROUP={{ oracle_dba_group }}
      oracle.install.db.OPER_GROUP={{ oracle_dba_group }}
      oracle.install.db.CLUSTER_NODES=
      oracle.install.db.isRACOneInstall=false
      oracle.install.db.racOneServiceName=
      oracle.install.db.config.starterdb.type=GENERAL_PURPOSE
      oracle.install.db.config.starterdb.globalDBName=
      oracle.install.db.config.starterdb.SID=
      oracle.install.db.config.starterdb.characterSet=
      oracle.install.db.config.starterdb.memoryOption=false
      oracle.install.db.config.starterdb.memoryLimit=
      oracle.install.db.config.starterdb.installExampleSchemas=false
      oracle.install.db.config.starterdb.password.ALL=
      oracle.install.db.config.starterdb.password.SYS=
      oracle.install.db.config.starterdb.password.SYSTEM=
      oracle.install.db.config.starterdb.password.DBSNMP=
      oracle.install.db.config.starterdb.storageType=
      oracle.install.db.config.starterdb.fileSystemStorage.dataLocation=
      oracle.install.db.config.starterdb.fileSystemStorage.recoveryLocation=
      oracle.install.db.config.asm.diskGroup=
      oracle.install.db.config.asm.ASMSNMPPassword=
      MYORACLESUPPORT_USERNAME=
      MYORACLESUPPORT_PASSWORD=
      SECURITY_UPDATES_VIA_MYORACLESUPPORT=false
      DECLINE_SECURITY_UPDATES=true
      PROXY_HOST=
      PROXY_PORT=
      PROXY_USER=
      PROXY_PWD=

- name: set inline changes (11.2)
  lineinfile: 
    path: "{{ oracle_tmp }}/db_install.rsp"
    regexp: "^{{ item.regex }}"
    line: "{{ item.regex }}={{ item.value }}"
  with_items:
    - { regex: oracle.install.responseFileVersion, value: "/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0" }
    - { regex: oracle.install.db.EEOptionsSelection, value: "false" }
    - { regex: oracle.install.db.optionalComponents, value: "" }
    - { regex: oracle.install.db.config.starterdb.enableSecuritySettings, value: "true" }
    - { regex: oracle.install.db.config.starterdb.password.SYSMAN, value: "" }
    - { regex: oracle.install.db.config.starterdb.control, value: "DB_CONTROL" }
    - { regex: oracle.install.db.config.starterdb.gridcontrol.gridControlServiceURL, value: "" }
    - { regex: oracle.install.db.config.starterdb.automatedBackup.enable, value: "false" }
    - { regex: oracle.install.db.config.starterdb.automatedBackup.osuid, value: "" }
    - { regex: oracle.install.db.config.starterdb.automatedBackup.ospwd, value: "" }
    - { regex: PROXY_REALM, value: "" }
    - { regex: COLLECTOR_SUPPORTHUB_URL, value: "" }
    - { regex: oracle.installer.autoupdates.option, value: "SKIP_UPDATES" }
    - { regex: oracle.installer.autoupdates.downloadUpdatesLoc, value: "" }
    - { regex: AUTOUPDATES_MYORACLESUPPORT_USERNAME, value: "" }
    - { regex: AUTOUPDATES_MYORACLESUPPORT_PASSWORD, value: "" }
  when: oracle_version | regex_replace ('^([0-9]{1,2}.[0-9]{1,}.[0-9]{1,})(.*)$','\g<1>') == "11.2.0"

- name: set inline changes (12.1)
  lineinfile: 
    path: "{{ oracle_tmp }}/db_install.rsp"
    regexp: "^{{ item.regex }}"
    line: "{{ item.regex }}={{ item.value }}"
  with_items:
    - { regex: oracle.install.responseFileVersion, value: "/oracle/install/rspfmt_dbinstall_response_schema_v12_1_0" }
    - { regex: oracle.install.db.BACKUPDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.DGDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.KMDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.rac.configurationType, value: "" }
    - { regex: oracle.install.db.rac.serverpoolName, value: "" }
    - { regex: oracle.install.db.rac.serverpoolCardinality, value: "0" }
    - { regex: oracle.install.db.ConfigureAsContainerDB, value: "false" }
    - { regex: oracle.install.db.config.PDBName, value: "" }
    - { regex: oracle.install.db.config.starterdb.password.PDBADMIN, value: "" }
    - { regex: oracle.install.db.config.starterdb.managementOption, value: "DEFAULT" }
    - { regex: oracle.install.db.config.starterdb.omsHost, value: "" }
    - { regex: oracle.install.db.config.starterdb.omsPort, value: "0" }
    - { regex: oracle.install.db.config.starterdb.emAdminUser, value: "" }
    - { regex: oracle.install.db.config.starterdb.emAdminPassword, value: "" }
    - { regex: oracle.install.db.config.starterdb.enableRecovery, value: "false" }
    - { regex: COLLECTOR_SUPPORTHUB_URL, value: "" }
  when: oracle_version | regex_replace ('^([0-9]{1,2}.[0-9]{1,}.[0-9]{1,})(.*)$','\g<1>') == "12.1.0"

- name: set inline changes (12.2)
  lineinfile: 
    path: "{{ oracle_tmp }}/db_install.rsp"
    regexp: "^{{ item.regex }}"
    line: "{{ item.regex }}={{ item.value }}"
  with_items:
    - { regex: oracle.install.responseFileVersion, value: "/oracle/install/rspfmt_dbinstall_response_schema_v12_1_0" }
    - { regex: oracle.install.db.OSDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.OSOPER_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.OSBACKUPDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.OSDGDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.OSKMDBA_GROUP, value: "{{ oracle_group }}" }
    - { regex: oracle.install.db.OSRACDBA_GROUP, value: "{{ oracle_group }}" }
  when: oracle_version | regex_replace ('^([0-9]{1,2}.[0-9]{1,}.[0-9]{1,})(.*)$','\g<1>') == "12.2.0"
  
- name: set inline changes (configure db)
  lineinfile: 
    path: "{{ oracle_tmp }}/db_install.rsp"
    regexp: "^{{ item.regex }}"
    line: "{{ item.regex }}={{ item.value }}"
  with_items:
    - { regex: oracle.install.db.config.starterdb.globalDBName, value: "{{ oracle_db_name }}" }
    - { regex: oracle.install.db.config.starterdb.SID, value: "{{ oracle_db_name }}" }
    - { regex: oracle.install.db.config.starterdb.characterSet, value: AL32UTF8 }
    - { regex: oracle.install.db.config.starterdb.memoryLimit, value: "2048" }
    - { regex: oracle.install.db.config.starterdb.password.ALL, value: "{{ oracle_db_syspass }}" }
    - { regex: oracle.install.db.config.asm.diskGroup, value: "{{ asm_disk_group }}" }
    - { regex: oracle.install.db.config.asm.ASMSNMPPassword, value: "{{ oracle_asm_syspass }}" }
  when: install_mode == "INSTALL_DB_AND_CONFIG"
  