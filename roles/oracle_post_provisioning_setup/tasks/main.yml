---

- import_role:
    name: oracle_api_services
    tasks_from: db_checklist_update.yml
  vars:
    chklst_json_body:
      new_entry: True
      checklist_type: "10"
      category_type: Install
      db_install_status: IN PROGRESS
  tags:
  - apex_api

- name: get oracle_sid
  shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set oracle_sid
  set_fact:
    oracle_sid: "{{ ps_grep_smon.stdout | regex_replace('asm_smon_(.*)', '\\1') }}"

- name: create tmp dir 
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}"
    state: directory
    recurse: yes

- name: create directories for post validation setup
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ directories }}"
    state: directory
    recurse: yes
  loop: "{{ create_directories }}"
  loop_control:
    loop_var: directories

- name: untar the scripts.tar
  unarchive:
    src: "{{ oracle_installer_path }}/scripts.tar"
    dest: "{{ oracle_base }}/admin/scripts"
    remote_src: yes

- name: Run Cleanup file job for Database
  command: '{{ oracle_base }}/admin/scripts/cleanup_files.ksh'
  register: cleanup_files
  ignore_errors: true
  
- name: save cleanup_files script stdout
  copy:
    dest: '{{ oracle_base }}/log/cleanup_files_{{ ansible_date_time.iso8601 }}.out'
    content: '{{ cleanup_files.stdout }}'
  changed_when: False

- name: save cleanup_files script stderr
  copy:
    dest: "{{ oracle_base }/log/cleanup_files_{{ ansible_date_time.iso8601 }}.err"
    content: "{{ cleanup_files.stderr | default('') }}"
  changed_when: False
  when: cleanup_files.stderr_lines | length > 0

- name: Set up Directory in ORACLE_ADMIN
  file:
    path: ‘{{ oracle_base }}/admin/chgctl’
    state: directory

- name: Execute Post Provisioning
  include_tasks: "{{ filename }}"
  loop:
  - post_provisioning.yml
  - adrci_setup.yml
  loop_control:
    loop_var: filename
  when: master_node == inventory_hostname

- import_role:
    name: oracle_api_services
    tasks_from: db_checklist_update.yml
  vars:
    chklst_json_body:
      new_entry: False
      db_install_status: SUCCESSFUL #Need a way to determine Failures
  tags:
  - apex_api
