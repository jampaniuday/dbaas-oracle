---

- include_vars: secrets.yml
  no_log: true

- include_tasks: copy_archives.yml

- name: get asm disk paths - {{ asm_data_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_data_pattern }}"
    use_regex: no
  register: asm_data_paths_find_result

- name: get asm disk paths - {{ asm_reco_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_reco_pattern }}"
    use_regex: no
  register: asm_reco_paths_find_result

- name: get asm disk paths - {{ asm_ocr_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_ocr_pattern }}"
    use_regex: no
  register: asm_ocr_paths_find_result
  when: grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE"

- name: set cluster_nodes_table
  set_fact:
    cluster_nodes_table: "{{ cluster_nodes_table | default([]) }} + [ '{{ item }}:{{ item | regex_replace('([^.]*)(.*)','\\1-vip\\2')}}' ]"
  with_items: "{{ cluster_nodes }}"
  when: grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE"

- include_tasks: set_net_string.yml
  when: inventory_hostname == master_node and (grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE")

- name: find number of oracle grid homes
  find:
    paths: "{{ oracle_base }}/{{ grid_version }}"
    file_type: directory
    patterns: "grid_+"
    use_regex: yes
    recurse: no
  register: number_of_oracle_grid_homes

- name: set oracle grid home
  set_fact:
    oracle_grid_home: "{{ oracle_base }}/{{ grid_version }}/grid_{{ number_of_oracle_grid_homes.matched | int + 1  }}"

- include_tasks: prep_rsp_file.yml
  when: inventory_hostname == master_node

- include_tasks: grid_install.yml

- name: check ASM is running
  shell: ps -ef|grep asm_smon|grep -v grep
  register: asm_running_check
  failed_when: asm_running_check.stdout_lines | length == 0

- include_role:
    name: oracle_api_services
    tasks_from: "{{ checklist_task }}_checklist_update.yml"
  vars:
    chklst_json_body:
      new_entry: True
      checklist_type: 'Configuring Disk Groups'
      category_type: Install
      gi_install_status: IN PROGRESS
  when: inventory_hostname == master_node
  tags:
  - apex_api

- include_tasks: configure_disk_groups.yml
  when: inventory_hostname == master_node
- fail:
    msg: 'DiskGroup Creation Failed'
  when: diskgroup_failed 