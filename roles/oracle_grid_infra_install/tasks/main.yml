---

- include_vars: secrets.yml
  no_log: false 



- name: check Grid is running
  shell: ps -ef | grep d.bin | grep -v grep | grep ohas
  register: ohas_grid_check
  changed_when: False
  ignore_errors: True

- include_tasks: copy_archives.yml
  when: ohas_grid_check.stdout_lines | length == 0

- name: get asm disk paths - {{ asm_data_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_data_pattern }}"
    use_regex: no
  register: asm_data_paths_find_result

- name: get asm disk paths - {{ asm_reco_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_reco_pattern }}"
    use_regex: no
  register: asm_reco_paths_find_result

- name: get asm disk paths - {{ asm_ocr_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_ocr_pattern }}"
    use_regex: no
  register: asm_ocr_paths_find_result
  when: grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE"

- name: set cluster_nodes_table
  set_fact:
    cluster_nodes_table: "{{ cluster_nodes_table | default([]) }} + [ '{{ item }}:{{ item | regex_replace('([^.]*)(.*)','\\1-vip\\2')}}' ]"
  with_items: "{{ cluster_nodes }}"
  when: grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE"

- include_tasks: set_net_string.yml
  when: inventory_hostname == master_node and (grid_install_mode == "CRS_CONFIG" or grid_install_mode == "CRS_SWONLY" or grid_install_mode == "UPGRADE")


- name: get oracle grid home
  shell: "ps -ef | grep ohasd | grep {{ oracle_base }}/{{ grid_version }}/ |  grep -v grep | awk -F ' ' '{ print $8 }'"
  changed_when: False
  register: oracle_ohasd_process
  
- name: set grid home
  set_fact:
       oracle_grid_home: "{{ oracle_ohasd_process.stdout | regex_replace('/bin/ohasd.bin', '') }}"

- include_tasks: prep_rsp_file.yml
  when: inventory_hostname == master_node


- name: check Grid is running
  shell: ps -ef | grep d.bin | grep -v grep | grep ohas
  register: ohas_grid_check
  changed_when: False
  ignore_errors: True

- import_role:
    name: oracle_api_services
    tasks_from: host_checklist_post_update.yml
  vars:
    chklst_json_body:
      new_entry: True
      host_name: "{{ ansible_hostname }}"
      checklist_type: GI Host Test
      category_type: Install
      gi_install_status: IN_PROGRESS
      task_desc: Install Grid
  tags:
  - apex_api


- include_tasks: grid_install.yml
  when: ohas_grid_check.stdout_lines | length == 0

- name: check ASM is running
  shell: ps -ef|grep asm_smon|grep -v grep
  register: asm_running_check
  failed_when: asm_running_check.stdout_lines | length == 0
  changed_when: False
  

- include_role:
    name: oracle_api_services
    tasks_from: "host_checklist_post_update.yml"
  vars:
    chklst_json_body:
      new_entry: False
      ID: "{{ checklist_id }}"
      checklist_type: 'Configuring Disk Groups'
      category_type: Install
      gi_install_status: IN_PROGRESS
  when: inventory_hostname == master_node
  tags:
  - apex_api

- include_tasks: configure_disk_groups.yml
  when: inventory_hostname == master_node
- fail:
    msg: 'DiskGroup Creation Failed'
  when:  diskgroup_failed 
  

- include_role:
    name: oracle_api_services
    tasks_from: host_checklist_post_update.yml
  vars:
    chklst_json_body:
      new_entry: False
      ID: "{{ checklist_id }}"
      checklist_type: 'Configuring Disk Groups'
      category_type: Install
      gi_install_status: FAILED
  when: 
    - inventory_hostname == master_node
    - diskgroup_failed 
  tags:
  - apex_api
