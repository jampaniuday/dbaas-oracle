---

- name: get asm disk paths - {{ asm_data_group }}
  find:
    paths: "{{ asm_disk_location }}"
    file_type: any
    patterns: "{{ asm_data_pattern }}"
    use_regex: no
  register: asm_data_paths_find_result

- name: create cluster_node_string
  set_fact:
    cluster_node_string: "{{ cluster_node_string | default([]) }} + [ '{{ hostvars[node_name]['ansible_hostname'] }}' ]"
  loop: "{{ cluster_nodes }}"
  loop_control:
    loop_var: node_name

- name: create oracle_uninstall rsp file
  template:
    owner: "{{ oracle_user }}"
    src: deinstall.rsp.j2
    dest: "{{ oracle_tmp }}/deinstall.rsp"
  when: inventory_hostname == master_node

# - name: 
#   become_user: {{ oracle_user }}
#   command: "{{ oracle_home }}/deinstall/deinstall -silent -paramfile {{ oracle_tmp }}/deinstall.rsp"
#   register: deinstall_cmd

# - name: save deinstall stdout
#   copy:
#     dest: "{{ oracle_tmp }}/deinstall_cmd.out"
#     content: "{{ deinstall_cmd.stdout }}"

# - name: save deinstall stderr
#   copy:
#     dest: "{{ oracle_tmp }}/deinstall_cmd.err"
#     content: "{{ deinstall_cmd.stderr }}" 