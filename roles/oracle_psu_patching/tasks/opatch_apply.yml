---



- name: Get running processes
  shell: "ps -ef| grep -v grep| grep -w asmcmd| grep -w daemon| awk '{print $2}'"
  register: running_ASM_processes

- name: Kill asm Running Processes
  shell: 'kill -9 {{ item }}'
  with_items: "{{running_ASM_processes.stdout_lines }}"

# - wait_for:
#   path: "/proc/{{ item }}/status"
#   state: absent
#   with_items: "{{running_ASM_processes.stdout_lines }}"
#   ignore_errors: yes
#   register: killed_processes


- name: host checklist post for Patching
  include_tasks: db_patch_checklist_update.yml
  vars:
    chklst_json_body:
      db_home: "{{ oracle_db_home }}"
      host_name: "{{ ansible_hostname }}"
      PSU_NUMBER: "{{ patch_num }}"
      PSU_QUARTER: "{{ patch_quarter }}"
      PSU_YEAR: "{{ patch_year }}"
      patch_type: "{{ patch_type }}"
      patch_status: 'RUNNING OPATCH APPLY'
      new_entry: True
  tags:
  - apex_api

- name: Run Opatch
  environment: "{{ ora_user_env }}"
  command: opatchauto apply {{ pstage }}/{{ patch_num }} {{ opatch_flags }} -oh {{ oracle_home }}
  register: opatch_apply

- name: save opatch apply stdout
  copy:
    dest: "{{ oracle_tmp }}/opatch_apply.out"
    content: "{{ opatch_apply.stdout }}"
  changed_when: False

- name: save opatch prereq stderr
  copy:
    dest: "{{ oracle_tmp }}/opatch_apply.err"
    content: "{{ opatch_apply.stderr }}"
  changed_when: False
  when: opatch_apply.stderr_lines | length > 0

- name: create old logs folder
  file:
    path: "{{ oracle_home }}/oldlogs"
    state: directory

- name: get opatch logfile
  find:
    paths: "{{ oracle_home }}/cfgtoollogs/opatch"
    file_type: file
    patterns: '*.log'
  register: opatch_log


- name: move log files to old logs folder
  command: mv {{ item.path }} {{ oracle_home }}/oldlogs
  with_items: "{{ opatch_log.files }}"

- debug:
    var: oracle_home

- debug:
    var: opatch_log

- name: Get latest log file
  set_fact:
    latest_file: "{{ opatch_log.files | sort(attribute='mtime',reverse=true) | first }}"

- name: host checklist post for Patching
  include_tasks: db_patch_upload_log.yml
  vars:
    logfile_path:   "{{ opatch_log.files[0].path }}"
  when:  opatch_log.files[0] is defined
  tags:
  - apex_api
