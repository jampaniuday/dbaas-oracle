---

- name: get db details
  command: grep "^{{ oracle_db_name }}:" /etc/oratab
  register: db_details

- name: set original_oracle_home
  set_fact:
    current_oracle_home: "{{ db_details.stdout | regex_replace('^[^:]*:([^:]*).*', '\\1') }}"

- block: 
  - name: get local_rac_sid
    shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
    register: ps_grep_rac
    changed_when: False

  - name: set local_rac_sid
    set_fact:
      local_rac_sid: "{{ ps_grep_rac.stdout | regex_replace('ora_smon_(.*)', '\\1') }}"
  when: rac_install == 'true'

- name: ensure 12c is installed
  stat:
    path: "{{ new_oracle_home }}/bin/dbua"
  register: ora_12c_installed
  tags:
  - oracle_install

- name: install 12c sw_only if needed
  import_role: 
    name: oracle_rdbms_install
  vars:
    oracle_home: "{{ new_oracle_home }}"
  when: ora_12c_installed.stat.exists == false
  tags:
  - oracle_install

- import_tasks: upgrade_prechecks.yml
  vars:
    oracle_home: "{{ current_oracle_home }}"
  when: inventory_hostname == master_node
  tags:
  - prechecks

- name: check for precheck failures
  fail:
    msg: There were {{ precheck_results_count.errors }} errors in the Precheck script
  when: hostvars[master_node]["precheck_results_count"]["errors"] | int > 0
  tags:
  - prechecks

- name: ensure needed directories in new home
  file:
    path: "{{ new_oracle_home }}/{{ curr_dir }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    state: directory
    mode: 755
  loop:
  - dbs
  - network/admin
  loop_control:
    loop_var: curr_dir
  tags:
  - copy
  
- name: move ora and orapw files
  shell: cp -p {{ current_oracle_home }}/{{ curr_file.sub_dir }}/{{ curr_file.filename }} {{ new_oracle_home }}/{{ curr_file.sub_dir }}/
  args:
    creates: '{{ new_oracle_home }}/{{ curr_file.sub_dir }}/{{ curr_file.filename }}'
  loop:
  - { filename: init.ora, sub_dir: dbs }
  - { filename: "init{{ oracle_db_name }}*.ora", sub_dir: dbs }
  - { filename: "orapw{{ oracle_db_name }}*", sub_dir: dbs }
  - { filename: tnsnames.ora, sub_dir: network/admin }
  loop_control:
    loop_var: curr_file
  tags:
  - copy
  
- include: upgrade_oracle.yml
  vars:
    oracle_home: "{{ new_oracle_home }}"
  when: 
    - db_details.rc == 0
    - current_oracle_home | regex_replace('.*/product/([^/]*).*', '\\1') != oracle_version
    - inventory_hostname == master_node

- import_tasks: upgrade_postchecks.yml
  vars:
    oracle_home: "{{ new_oracle_home }}"
  when: inventory_hostname == master_node
  tags:
  - postchecks