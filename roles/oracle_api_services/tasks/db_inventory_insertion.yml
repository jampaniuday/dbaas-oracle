
---

- include_vars: var_db_inventory_insertion.yml

- name: Create A File For Inserting ID Details Formed In DB
  lineinfile: 
    path: /root/api_service/ansible_db_details.txt
    line: DETAILS OF THE ID'S WE GET AFTER POST CALLS
    create: yes

- name: check if db inventory name exists
  shell:  cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of {{ db_values.database_name }}*'
  register: is_db_inv_name_exist
  ignore_errors: yes


- name: Complete Tasks Of DB Inventory Insertion
  block:
    - name: Insert Starting Part of the Host Inventory Name For Identification
      lineinfile: 
        path: /root/api_service/ansible_db_details.txt
        line: "ID Of {{ db_values.database_name }}"
      when: is_db_inv_name_exist.stdout == ""

    - name: convert to jinja
      template:
       src: ./db_inventory_insrtion_body.j2
       dest: /root/api_service/db_inventory_insrtion/body_of_{{ db_values.database_name }}.json

    - name: cat out the created json
      shell: cat /root/api_service/db_inventory_insrtion/body_of_{{ db_values.database_name }}.json
      register: db_inventory_insrtion_body
      
  #  "app_id" is a fk and needs to discussed and is not in body of post call
    - name: Make A POST Call To Insert DB Inventory Details In V_DB_INVENTORY
      uri:
        url: https://apex.techlab.com:8443/ords/invent2/charter/insert_db_inventory
        validate_certs: no  # should be removed after https certs becomes renewed
        method: POST
        body_format: json
        body: "{{ db_inventory_insrtion_body.stdout }}"
        headers:
            Content-Type: "application/json"
      register: v_db_inventory_insertion_response

    - name: CHECK POST CALL'S Success
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of {{ db_values.database_name }}*"
        line: ""
      when:  v_db_inventory_insertion_response.status != 200

    - name: Insert The db_member_id In ansible_db_details.txt File
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of {{ db_values.database_name }}*"
        line: "ID Of {{ db_values.database_name }} database={{ v_db_inventory_insertion_response.json | json_query('ID') }}"
  when: is_db_inv_name_exist.rc == 1

