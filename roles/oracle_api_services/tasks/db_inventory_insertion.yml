
- include_vars: var_db_inventory_insertion.yml

- name: Create A File For Inserting ID Details Formed In DB
  lineinfile: 
    path: /root/api_service/ansible_db_details.txt
    line: DETAILS OF THE ID'S WE GET AFTER POST CALLS
    create: yes

- name: check if db inventory name exists
  shell:  cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of {{ database_name }}*'
  register: is_db_inv_name_exist
  ignore_errors: yes

- name: Insert Starting Part of the Host Inventory Name For Identification
  lineinfile: 
    path: /root/api_service/ansible_db_details.txt
    line: "ID Of {{ database_name }}"
  when: is_db_inv_name_exist.stdout == ""

- name: Complete Tasks Of DB Inventory Insertion
  block:
    # "app_id" is a fk and needs to discussed and is not in body of post call
    - name: Make A POST Call To Insert DB Inventory Details In V_DB_INVENTORY
      uri:
        url: https://apex.techlab.com:8443/ords/invent2/charter/insert_db_inventory
        validate_certs: no  # should be removed after https certs becomes renewed
        method: POST
        body_format: json
        body: {
            "database_name": "{{ database_name }}", 
            "application_name": "{{ application_name }}", 
            "environment": "{{ environment }}", 
            "oracle_version": "{{ oracle_version }}", 
            "rac_type": "{{ rac_type }}", 
            "business_unit": "{{ business_unit }}", 
            "appliance": "{{ appliance }}", 
            "database_role": "{{ database_role }}", 
            "pci_required": "{{ pci_required }}", 
            "sox_required": "{{ sox_required }}", 
            "encryption_required": "{{ encryption_required }}", 
            "dataguard": "{{ dataguard }}", 
            "golden_gate": "{{ golden_gate }}", 
            "backup_enabled": "{{ backup_enabled }}", 
            "end_of_life": "{{ end_of_life }}", 
            "db_monitoring_tool": "{{ db_monitoring_tool }}", 
            "monitoring": "{{ monitoring }}", 
            "comments": "{{ comments }}",
            "instance_count": "{{ instance_count }}", 
            "db_source": "{{ db_source }}", 
            "dr_solution": "{{ dr_solution }}", 
            "dr_location": "{{ dr_location }}", 
            "env_category": "{{ env_category }}", 
            "host_code": "{{ host_code }}", 
            "storage_type": "{{ storage_type }}"
            }
        headers:
            Content-Type: "application/json"
      register: v_db_inventory_insertion_response

    - name: Insert The db_member_id In ansible_db_details.txt File
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of {{ database_name }}*"
        line: "ID Of {{ database_name }} = {{ v_db_inventory_insertion_response.json | json_query('ID') }}"
  when: is_db_inv_name_exist.rc == 1
