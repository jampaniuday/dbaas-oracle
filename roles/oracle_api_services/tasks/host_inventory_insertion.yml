- name: Create A File For Inserting ID Details Formed In DB
  lineinfile: 
    path: /root/api_service/ansible_db_details.txt
    line: DETAILS OF THE ID'S WE GET AFTER POST CALLS
    create: yes

- include_vars: var_host_inventory_insertion.yml

- name: check if host inventory name exists
  shell:  cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of {{ host_name }}*'
  register: is_host_inv_name_exist
  ignore_errors: yes

- name: Insert Starting Part of the Host Inventory Name For Identification
  lineinfile: 
    path: /root/api_service/ansible_db_details.txt
    line: "ID Of {{ host_name }}"
  when: is_host_inv_name_exist.stdout == ""

- name: Complete Tasks Of Host Inventory Insertion
  block: 
   - name: convert to jinja
     template:
      src: ./host_inventory_insrt_body.j2
      dest: /root/api_service/host_inventory_insrt_body.json

    - name: cat out the created json
      shell: cat /root/api_service/host_inventory_insrt_body.json
      register: host_inventory_insrt_body

    - name: Make a POST call to insert host details in V_HOST_INV_TBL
      uri:
        url: https://apex.techlab.com:8443/ords/invent2/charter/insert_host_inventory
        validate_certs: no  # should be removed after https certs becomes renewed
        method: POST
        body_format: json
        body: "{{ host_inventory_insrt_body.stdout }}"
        headers:
            Content-Type: "application/json"
      register: v_host_detail_insertion_response

    - name: Insert The v_host_inventory_id In ansible_db_details.txt File
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of {{ host_name }}*"
        line: "ID Of {{ host_name }} = {{ v_host_detail_insertion_response.json | json_query('ID') }}"
  when: is_host_inv_name_exist.rc == 1

  
     





  
  

        #  "host_name": "{{ host_name }}",
        #         "network_type": "{{ network_type }}", 
        #         "core_count": "{{ core_count }}", 
        #         "processor_config_speed": "{{ processor_config_speed}}", 
        #         "server_model": "{{ server_model }}", 
        #         "hardware_vendor": "{{ hardware_vendor }}", 
        #         "os_type_version": "{{ os_type_version }}", 
        #         "processor_bit": "{{ processor_bit }}", 
        #         "phy_virt": "{{ phy_virt }}",
        #         "dc_location": "{{ dc_location }}", 
        #         "global_zone_solaris": "{{ global_zone_solaris }}", 
        #         "phy_memory": "{{ phy_memory }}", 
        #         "server_monitoring_tool": "{{ server_monitoring_tool }}", 
        #         "host_code": "{{ host_code }}",
        #         "clustered": "{{ clustered }}", 
        #         "os_type": "{{ os_type }}", 
        #         "env_source": "{{ env_source }}"