# - include: application_details_insertion.yml

# - include: application_details_update.yml
#   vars:
#    update_applicaton_body:
#      - { key: application_name , value : "DELETE_THIS_UP_1" , delimiter: ","}
#      - { key: tech_contact_email , value: "hey@there.com" , delimiter: ""}



# - include: host_inventory_update.yml
#   vars:
#     update_host_inv_body:
#       - { key: network_type , value: "PLS_DELETE_THIS" , delimiter: "" , host_name: ""  }
#       - { key: network_type , value: "PLS_DELETE_THIS-dbtest04" , delimiter: "," , host_name: "dbtest04"  }
#       - { key: network_type , value: "PLS_DELETE_THIS-dbtest04" , delimiter: "" , host_name: "dbtest04"  }
#     specific_host_update: true

# - name: get id
#   shell: cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of {{ ansible_hostname }}' | awk -F '=' '{print $2}'
#   register: host_inv_id

# - include: db_checklist_insertion.yml
#   vars:
#    host_id: "{{ host_inv_id.stdout }}"

#--- host inventory insertion ---
# - include: host_inventory_insertion.yml
#--- host inventory insertion ---

#---- cluster member insertion ---
# - include: cluster_member_insertion.yml
#---- cluster member insertion ---

# ---- host inventory update ----
# - name: get cluster_id
#   shell: cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of cluster' | awk -F '=' '{print $2}'
#   register: cluster_id
  
# - include: host_inventory_update.yml
#   vars:
#     update_host_inv_body:
#       - { key: cluster_id , value: "{{ cluster_id.stdout | int }}" , delimiter: "" , host_name: ""  }
#     specific_host_update: false
# ---- host inventory update ----

#------- demo one ---------
# - include_vars: var_db_inventory_insertion.yml
# - name: set a variable of db's specific to host
#   set_fact:
#     host_specific_dbs: "{{ item.databases }}"
#   when: item.host_name == ansible_hostname
#   with_items: "{{ db_details }}"
#------- demo one ---------

#---- db inventory table insertion ------
# - include: db_inventory_insertion.yml db_values="{{ item }}"
#   with_items: "{{ host_specific_dbs }}"
#---- db inventory table insertion ------

#----db_checklist_insertion-------
# note: change the variable yml structure , not host specific
# - name: get the db_name and id
#   shell: cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of .* database' | awk -F ' ' '{split($4,a,"="); print a[2]  " "  $3}'
#   register: db_details
# - include: db_checklist_insertion.yml db_name_and_id="{{ item }}"
#   with_items: "{{ db_details.stdout_lines }}"
#   when: db_details.stdout != ""
#----db_checklist_insertion-------


#---db_checklist_update----
# - name: get the db_name and id
#   shell: cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of .* database' | awk -F ' ' '{split($4,a,"="); print a[2]  " "  $3}'
#   register: db_details
# - include: db_checklist_update.yml db_name_and_id="{{ item }}"
#   vars:
#     update_db_cklist_body:
#       - { key: checklist_type , value: "it is working XD !!!!" , delimiter: "," }
#       - { key: db_install_status , value: "working buddy -_-" , delimiter: "" }
#   with_items: "{{ db_details.stdout_lines }}"
#   when: db_details.stdout != ""
#---db_checklist_update----



 
