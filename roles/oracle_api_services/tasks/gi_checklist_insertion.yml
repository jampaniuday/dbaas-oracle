---

- import_role:
    name: oracle_api_services
    tasks_from: get_host_id.yml
  when: host_id is not defined

- name: check if GI checklist name exists
  shell:  cat /root/api_service/ansible_db_details.txt | grep -e '^ID Of checklist for {{ ansible_hostname }} gi'
  register: is_gi_chklst_name_exist
  ignore_errors: yes

- name: Complete Tasks Of GI Checklist Insertion
  block:
    - name: Insert Starting Part of the db checklist Name For Identification
      lineinfile: 
        path: /root/api_service/ansible_db_details.txt
        line: "ID Of checklist for {{ ansible_hostname }} gi"
      when: is_gi_chklst_name_exist.stdout == ""

    - name: Make A POST Call To Insert DB Checklist Details In V_DB_CHECK_LIST
      uri:
        url: "{{ apex_url }}/insert_db_check_list"
        validate_certs: no  # should be removed after https certs becomes renewed
        method: POST
        body_format: json
        body:
          host_id: "{{ host_id }}"
        headers:
            Content-Type: "application/json"
      register: db_checklist_insrt_response

    - name: Insert The Id Of DB Checklist In ansible_db_details.txt File
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of checklist for {{ ansible_hostname }} gi"
        line: "ID Of checklist for {{ ansible_hostname }} gi={{ db_checklist_insrt_response.json | json_query('ID') }}"

  rescue:
    - name: Remove the ID String Since POST call Didn't Succeed
      lineinfile:
        path: /root/api_service/ansible_db_details.txt
        regexp: "^ID Of checklist for {{ ansible_hostname }} gi"
        state: absent
    - name: Store the Json If APEX Server Is Down
      lineinfile:
        path: /root/api_service/unsent_json_body/gi_chklst_insertion_body.json
        line: '{"host_id" : "{{ host_id }}"}'
        create: yes
      when: db_checklist_insrt_response.status == "500"
  when: is_gi_chklst_name_exist.rc == 1